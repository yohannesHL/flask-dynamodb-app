Resources:
  TheVPC92636AB0:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: aws-ec2-dynamodb/TheVPC
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheVPC/Resource
  TheVPCPublicSubnet1Subnet770D4FF2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/17
      VpcId:
        Ref: TheVPC92636AB0
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: aws-ec2-dynamodb/TheVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheVPC/PublicSubnet1/Subnet
  TheVPCPublicSubnet1RouteTable17DA183D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: TheVPC92636AB0
      Tags:
        - Key: Name
          Value: aws-ec2-dynamodb/TheVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheVPC/PublicSubnet1/RouteTable
  TheVPCPublicSubnet1RouteTableAssociationE5186D77:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: TheVPCPublicSubnet1RouteTable17DA183D
      SubnetId:
        Ref: TheVPCPublicSubnet1Subnet770D4FF2
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheVPC/PublicSubnet1/RouteTableAssociation
  TheVPCPublicSubnet1DefaultRoute6D26543F:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: TheVPCPublicSubnet1RouteTable17DA183D
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: TheVPCIGWFA25CC08
    DependsOn:
      - TheVPCVPCGWC9B93E30
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheVPC/PublicSubnet1/DefaultRoute
  TheVPCPublicSubnet2Subnet73F96DA9:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/17
      VpcId:
        Ref: TheVPC92636AB0
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: aws-ec2-dynamodb/TheVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheVPC/PublicSubnet2/Subnet
  TheVPCPublicSubnet2RouteTable3609F42C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: TheVPC92636AB0
      Tags:
        - Key: Name
          Value: aws-ec2-dynamodb/TheVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheVPC/PublicSubnet2/RouteTable
  TheVPCPublicSubnet2RouteTableAssociationB4B0A733:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: TheVPCPublicSubnet2RouteTable3609F42C
      SubnetId:
        Ref: TheVPCPublicSubnet2Subnet73F96DA9
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheVPC/PublicSubnet2/RouteTableAssociation
  TheVPCPublicSubnet2DefaultRouteFEB062B2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: TheVPCPublicSubnet2RouteTable3609F42C
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: TheVPCIGWFA25CC08
    DependsOn:
      - TheVPCVPCGWC9B93E30
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheVPC/PublicSubnet2/DefaultRoute
  TheVPCIGWFA25CC08:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: aws-ec2-dynamodb/TheVPC
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheVPC/IGW
  TheVPCVPCGWC9B93E30:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: TheVPC92636AB0
      InternetGatewayId:
        Ref: TheVPCIGWFA25CC08
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheVPC/VPCGW
  InstanceSSMCBFA3CF0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonEC2RoleforSSM
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/InstanceSSM/Resource
  InstanceSSMDefaultPolicy6E4EFE93:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :s3:::demo-secrets
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :s3:::demo-secrets/*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :s3:::demo-secrets
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :s3:::demo-secrets/.env
          - Action:
              - cloudformation:DescribeStackResource
              - cloudformation:SignalResource
            Effect: Allow
            Resource:
              Ref: AWS::StackId
          - Action: dynamodb:GetItem
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - TheTable41DEE1DC
                - Arn
        Version: "2012-10-17"
      PolicyName: InstanceSSMDefaultPolicy6E4EFE93
      Roles:
        - Ref: InstanceSSMCBFA3CF0
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/InstanceSSM/DefaultPolicy/Resource
  InstanceInstanceSecurityGroupF0E2D5BE:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: aws-ec2-dynamodb/Instance/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: aws-ec2-dynamodb/Instance
      VpcId:
        Ref: TheVPC92636AB0
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/Instance/InstanceSecurityGroup/Resource
  InstanceInstanceProfileAB5AEF02:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: InstanceSSMCBFA3CF0
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/Instance/InstanceProfile
  InstanceC1063A87:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: InstanceInstanceProfileAB5AEF02
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.nano
      SecurityGroupIds:
        - Fn::GetAtt:
            - InstanceInstanceSecurityGroupF0E2D5BE
            - GroupId
      SubnetId:
        Ref: TheVPCPublicSubnet1Subnet770D4FF2
      Tags:
        - Key: Name
          Value: aws-ec2-dynamodb/Instance
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - >-
                #!/bin/bash

                #!/bin/sh


                yum install docker -y


                # makes a directory

                mkdir /appdata

                mount -t efs fs-d48c7f8c:/ /appdata



                # enable and start docker

                systemctl enable docker

                systemctl start docker


                # bootstraps "docker compose"

                curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

                chmod +x /usr/local/bin/docker-compose

                ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

                usermod -aG docker ec2-user


                docker pull docker pull yohanhl/flask-dynamodb-app


                # Heredoc for a docker-compose.yaml file

                cat << 'EOF' > /app/docker-compose.yaml

                version: '3'

                services:
                  app:
                    image: yohanhl/flask-dynamodb-app
                    ports:
                      - 8080:5000
                    restart: always
                    env_file: .env
                EOF


                cd /app

                docker-compose up

                # fingerprint: 69d18f7c1ce6863d

                (
                  set +e
                  /opt/aws/bin/cfn-init -v --region 
              - Ref: AWS::Region
              - " --stack "
              - Ref: AWS::StackName
              - >-2
                 --resource InstanceC1063A87 -c default
                  /opt/aws/bin/cfn-signal -e $? --region 
              - Ref: AWS::Region
              - " --stack "
              - Ref: AWS::StackName
              - >-2
                 --resource InstanceC1063A87
                  cat /var/log/cfn-init.log >&2
                )
    DependsOn:
      - InstanceSSMDefaultPolicy6E4EFE93
      - InstanceSSMCBFA3CF0
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT5M
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/Instance/Resource
      AWS::CloudFormation::Init:
        configSets:
          default:
            - config
        config:
          files:
            /app/.env:
              source:
                Fn::Join:
                  - ""
                  - - https://s3.
                    - Ref: AWS::Region
                    - "."
                    - Ref: AWS::URLSuffix
                    - /demo-secrets/.env
              mode: "000644"
              owner: root
              group: root
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName:
            Ref: InstanceSSMCBFA3CF0
          buckets:
            - demo-secrets
  TheTable41DEE1DC:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: code_name
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: code_name
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: devops_challenge
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: aws-ec2-dynamodb/TheTable/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.63.0,@aws-cdk/assets=1.63.0,@aws-cdk/aws-applicationautoscaling=1.63.0,@aws-cdk/aws-autoscaling-common=1.63.0,@aws-cdk/aws-cloudformation=1.63.0,@aws-cdk/aws-cloudwatch=1.63.0,@aws-cdk/aws-codeguruprofiler=1.63.0,@aws-cdk/aws-dynamodb=1.63.0,@aws-cdk/aws-ec2=1.63.0,@aws-cdk/aws-efs=1.63.0,@aws-cdk/aws-events=1.63.0,@aws-cdk/aws-iam=1.63.0,@aws-cdk/aws-kms=1.63.0,@aws-cdk/aws-lambda=1.63.0,@aws-cdk/aws-logs=1.63.0,@aws-cdk/aws-s3=1.63.0,@aws-cdk/aws-s3-assets=1.63.0,@aws-cdk/aws-sns=1.63.0,@aws-cdk/aws-sqs=1.63.0,@aws-cdk/aws-ssm=1.63.0,@aws-cdk/cloud-assembly-schema=1.63.0,@aws-cdk/core=1.63.0,@aws-cdk/custom-resources=1.63.0,@aws-cdk/cx-api=1.63.0,@aws-cdk/region-info=1.63.0,jsii-runtime=Python/3.8.2
    Condition: CDKMetadataAvailable
Outputs:
  vpcid:
    Value:
      Ref: TheVPC92636AB0
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

